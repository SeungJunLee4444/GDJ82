[6] 선택자(selector)

1. 태그 선택자
- 형태 : 태그명 {}

2. class 선택자 
- 형태 : .class명 {}

3. id 선택자
- 형태 : #id명 {} 

4. 자식선택자
ex) 
<ul>
      <li>
	<a href="~~~~~~~">
      </li>
</ul>

1) 자식선택자
ul > li {}
=> ul태그의 자식 li태그

2) 후손선택자
ul > li > a
=> ul태그의 후손태그인 a

* 불가능
ul > a
=> 자식태그가 아닌 후손태그니 불가능

5. 후손 선택자
(1) 4)2처럼 >를 사용해 부르는 방법
(2) 공백을 주어 사용하는 방법
ex)
<dl>
       <dt>
            <strong>이름</strong>
        </dt>
        <dd>진라면</dd>
        <dt>
            <strong>조리법</strong>
        </dt>
        <dd>4분간 끓인다</dd>
</dl>
=> dl strong {}
(dl의 후손 strong 태그)

-------------------------------------------------------------------------

6. 형제 선택자
1) 모든형제(~)
- 형태 : 태그 > 자식 ~ 형제 {}
태그의 자식태그와 형제관계인 형제태그 전부

ex) 
<div class="europe">
       <h3>유럽</h3>
       <div>영국</div>
       <div>프랑스</div>
       <div>독일</div>
</div>

문제) div태그 전부 지정
=> div > h3 ~ div
(div의 자식태그 h3의 형제태그인 div 전부)


2) 인접형제(+)

문제) 첫번째 div만 지정
=> div > h3 + div		( +div + div로 물타기 불가능)
(div의 자식태그인 h3와 인접한 태그 div)

=> europe 태그의 자식태그인 h3태그와 가장 인접한 태그 div
결과 : 영국에만 css 반영

-------------------------------------------------------------------------

7. 구조선택자
- 자식태그에서 원하는 태그를 선택해 지정
1) :fist-of-type	: 첫번째 요소
2) :last-of-type	: 마지막 요소
3) :nth-of-type(n)	: n번째 요소

ex)
<h4>오늘 먹을 점심 메뉴</h4>
<ol>
        <li>돈가스</li>
        <li>냉면</li>
        <li>김치찌개</li>
        <li>두루치기</li>
</ol>

문제) li 2번째 요소 지정
=> h4 + ol > li:nth-of-type(2)
(h4의 형제태그 ol의 자식태그 li의 2번째 태그)

* nth-of-type(n)								& nth-of-type(n)
=> 0번째부터 순서대로 모든 열에 동일한 속성을 지정

=> 응용법	
ex)
.box1 > table td:nth-of-type(n) {
            width: 100px;
}
.box1 > table td:nth-of-type(2) {
            width:200px;
}
=> 모든 열에 100px를 지정하고 2번째 열에만 200px를 지정한다



(1) nth-of-type(2n +1)	: 홀수 열에만 지정
(2) nth-of-type(2n)		: 짝수 열에만 지정


-------------------------------------------------------------------------

8. 속성 선택자
* 속성, 또는 속성값을 입력해 원하는 특정요소를 지정

(1) 요소[속성이름] : 속성을 가진 해당 요소들
(2) 요소[속성이름=속성값] : 속성과 값을 지닌 해당 요소들
(3) 요소[속성^=a]	: 속성값이 'a'으로 시작하는 요소들
ex)
div[class^="minions"] { background-color: red; }
= <div class="minions">layer</div> 선택함
= <div class="minions-yellow">layer</div> 선택함
= <div class="minions_yellow">layer</div> 선택함
= <div class="minions minimini">layer</div> 선택함

(4) 요소[속성$=b] : 속성값이 'b'로 끝나는 요소들
(5) 요소[속성*=c] : 속성값이 c를 포함하는 요소

-------------------------------------------------------------------------

9. 마우스 반응 선택자
1) :hover : 마우스를 가져다 대는 동안 반응
2) :active : 마우스를 클릭하는 동안 반응
* 순서는 hover -active 순으로 작성

10. 상태 선택자
1) focus		: 선택했을 때(특정 텍스트칸)
2) checked 	: 체크했을 때(radio, checkbox 등) 

ex)

<form class="register">
        <div>
            <label for="c">성명</label>
            <input type="text" id="c">
        </div>
        <div>
            <input type="radio" id="a" name="gender" value="1">
            <label for="a">남자</label>
            <input type="radio" id="b" name="gender" value="2">
            <label for="b">여자</label>
        </div>
</form>

문제1) c를 선택하면 배경을 붉은색으로 변경
#c:focus {
	background-color: red;
}

문제2) 라벨을 체크하면 글자 굵게 만들기
.register > div > input[name=gender]:checked + label {
	foun-weight : 900;
}














