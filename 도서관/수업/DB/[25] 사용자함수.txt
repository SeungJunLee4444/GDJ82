[25] 사용자 함수
* 사용자가 만든 함수
* 어떤 값을 반환할 때 사용하며, 값을 반환할 때 RETURN사용
=> 즉 출력 파라미터(X)										& RETURN
* 입력파라미터 + RETURN 사용
* SELECT문과 같은 쿼리문에서 값을 확인가능								
* 입력과 출력(RETURN)을 동시에

* 특징
(1) 출력에 RETURN 함수 사용,
(2) RETURN할 반환타입 선언해야함 
(3) 입력에는 IN을 사용하지 않음 
(4) SELECT문에서 사용								

* 프로시저와 사용자 함수
공통점 : IS,BEGIN,EXCEPTION 구조
차이점 : 사용자함수는 반환시 출력파라미터 대신 RETURN이 있음						& 사용자함수, 프로시저 차이

1) 형태
CREATE [OR REPLACE] FUNCTION 함수이름](매개변수)]
RETURN 반환타입
IS
	변수선언
BEGIN
	함수본문
[EXCEPTION]
	예외사항
END[함수이름명시]

경우의 수
(1) 매개변수 없이 값 반환
(2) 매개변수를 받고 값 반환
(3) 매개변수를 받아 특정조건(IF문)을 통과하면 값 반환



2) 실습
(1) 매개변수 없이 문자열 반환

CREATE OR REPLACE FUNCTION FUNC1
RETURN VARCHAR2  (반환값의 타입은 VARCHAR2)	
IS
BEGIN
	RETURN 'HELLO WORLD'	('HELLO WORLD'를 반환)
END FUNC1;

SELECT FUNC1() FROM DUAL;

(2) 
예시 1. 사원번호를 전달하면 해당 사원의 FULL_NAME이 반환
CREATE OR REPLACE FUNCTION FUNC2(EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE)
RETURN VARCHAR2
IS
	FNAME EMPLOYEES.FIRST_NAME%TYPE;
	LNAME EMPLOYEES.LAST_NAME%TYPE;
BEGIN
	SELECT FIRST_NAME, LAST_NAME
	  INTO FNAME, LNAME	
  	 FROM EMPLOYEES			
	WHERE EMPLOYEE_ID = EMP_ID;	(입력한 사원번호가 테이블의 사원번호와 같을때, FIRST, LAST NAMED을 저장
           RETURN FNAME || '	' || LNAME;	(저장한 FNAME과 LNAME을 합친값을 반환)
END FUNC2;

SELECT FUNC2(EMPLOYEE_ID) FROM EMPLOYEES;	(테이블 내 사원(번호)의 풀네임 조회)	

(3) 
예시 2. 연봉을 전달하면 'A~C그룹'을 반환
15000 이상은 A그룹, 8000이상은 B그룹, 나머지는 C그룹

CREATE OR REPLACE FUNCTION FUNC3(SAL EMPLOYEES.SALARY%TYPE)
RETURN VARCAHR2 (RESULT의 타입은 VARCHAR2)

IS
	RESULT VARCHAR2(10 BYTE);
BEGIN
	IF SAL >= 15000 THEN
		RESULT := 'A그룹';
	ELSIF SAL > 8000 THEN
		RESULT := 'B그룹';
	ELSE
		RESULT := 'C그룹';
	END IF;
	RETURN RESULT;	(입력된 매개변수에 해당하는 조건의 RESULT값 반환)
END FUNC3;

SELECT EMPLOYEE_ID
         ,FIRST_NAME
         ,SALARY
         ,FUNC3(SALARY)	(A그룹, B그룹, C그룹 반환)
   FROM EMPLOYEES;	

(4) 새로운 함수 만들기										& 함수만들기
예시 : 
SELECT CEIL(1.123)		=> 정수로 올림
	,MY_CEIL(1.123,2)	=> 소수 2자리로 올림
	,MY_CEIL(1.123,1)	=> 소수 한자리로 올림
	,MY_CEIL(1.123,0)	=> 정수로 올림
	,MY_CEIL(1.123,-1)	=> 일의자리에서 올림
	,MY_CEIL(1.123,-2) => 십의자리에서 올림
	FROM DUAL;

CREATE OR REPLACE FUNCTION MY_CEIL (N NUMBER, DIGHT NUMBER)
RETURN NUMBER (반환타입이 NUMBER)

IS
BEGIN
	RETURN CEIL(N * POWER(10, DIGHT)) / POWER(10, DIGIT);	( RESULT 변수선언 없이도 반환가능)		& RESULT

END MY_CEIL;






				
	
	