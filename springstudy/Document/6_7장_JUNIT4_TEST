<<< 6장, 7장 : JUNIT4 TEST >>>


<<프로젝트 6 : 목록>>  ==========================================
# 6장 crud : 볼거없음
# 6장 jdbc : test 사용
# 7장 dbcp : test 커스터마이징, jndi방식으로 처리된 resource를 context.xml 대신 test에서 참고할수 있게 만듬

=================================================================
<<프로젝트 6 : 개념>>

[[[ test

# spring-test 어노테이션
(1) @Runwith()            : junit 어노테이션
ex) @RunWith (SpringJUnit4ClassRunner.class)
(2) @ContextConfiguration : 참조하는 컨테이너 위치 
- 종류
(1) root-context.xml에 bean이 있는 경우
ContextConfiguration(locations={"file:src/main/webapp/WEB-INF/spring/root-context.xml"})
(2) springbeanconfig에 bean이 있는 경우
@ContextConfiguration(classes={SpringBeanConfig.class})
(3) @component를 이용한 경우
@ContextConfiguration(locations={"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"})

* 배열?

- 참고 : 6장 test 파일

- 메서드
assertEquals(a, b) : a와 b가 같은지?
assertNotNull(a)   : a값이 존재하는지?
assertTure(a)      : 조건 a가 참인지 확인
assertSame(a,b)    : 객체 a,b가 같은 객체임을 확인
assertArrayEquals(a,b) : 배열 a,b의 값이 일치함을 확인

- junit 테스트 어노테이션
@Test		 : 테스트를 수행하는 메서드
@Ignore		 : 테스트를 실행 안하게됨
@Before		 : @test가 실행되기 전에 실행됨
@After		 : @test가 실행된 후에 실행됨
@BeforeClass : @모든 @test가 실행되기 전에 한번만 수행
@AfterClass  : @모든 @test가 실행된 후에 한번만 실행

[[[ * @component가 저장되는 컨테이너
- 위치 : servlet-context.xml
- 형태 : <context:component-scan base-package="com.gdu.컨텍스트패스" /> 추가
* 알아서 만들어져있음







=================================================================
<<프로젝트 6 : 추가, 위젯, 설치, jar>>

# 인코딩 
- 위치 : web.xml
- 휙득경로 : 인터넷 검색(검색어 : 스프링 web.xml 인코딩)으로 바로 확인가능

# 위젯 : summermote 에디터
- 다운로드 및 코드 참고주소 : https://summernote.org/getting-started/#get-summernote

# STS에 SQL 파일 사용할 수 있게 다운받기 
* 기존에는 SQL 파일을 쓸수없음
- 방법 : STS의 HTLP탭 - INSTALL NEW SOFTWARE - ORACLE검색 - DATABASE 선택후 설치 - 설치후 accept

# springTestContext framework : 스프링에서 test 사용이 가능해지는 jar

# ojdbc8 : jdbc용, sts에서 sql문서 실행에 필요

=================================================================
<<프로젝트 6 : 기타>>

# 생성, 편집 삭제가 post방식인 이유 
- 편집하려는 주소와 게시글번호만 알면 url을 이용해서 삭제, 편집화면에 들어가 수정이 가능하다 





