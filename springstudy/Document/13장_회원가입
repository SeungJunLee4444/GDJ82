<<< 13장 : 회원가입  >>>

<<프로젝트 13 : 수업목록>> -------------------------------------------------------------

#
# 로그인과 로그아웃 : serviceimpl login, logout 참고
# 아이디 저장기능 : login.jsp 영역에서 처리
# 로그인 유지기능 : serviceimpl keeplogin 에서 처리
# 쿠키 저장하는법 : serviceimpl keeplogin 참고
# 인터셉터 		  : controller 참고
# servlet-context.xml에 자바빈 작성하는법 : application context방식 
# 비밀번호 재확인 : check.jsp 참고
# 제이쿼리로 특정화면 숨기기, 보여주기 : mypage.jsp 참고
# 비밀번호 변경 : mypage.jsp 참고
# AOP : aop 패키지 참고, AOP로 로그인이 필요한 기능을 별도로 처리 
# 스프링 스케줄러 : batch 패키지 참고, 1년이상 로그인 기록이 없는 경우 휴먼계정 처리, 기존 유저테이블에서 삭제
# 로그인시 스케줄링 확인(인터셉터) : controller의 login수행시 인터셉터 개입 
# 휴먼회원이 아이디/비밀번호로 다시 로그인하면 정상회원으로 등록
# 11개월 차에 안내메일 전송하기

<<프로젝트 13 : 정리>>	-------------------------------------------------------------									=> 수업목록과 정리는 남기기
[[[ 스프링 스케줄러
# 스프링 스케줄러

# 사용하는법 : 어노테이션 선언
- 클래스 
@component 처리
@enablescheduling 어노테이션
- 메서드
@scheduled(cron=크론식)

# 크론식
 * # Cron expression(크론식) -- http://www.cronmaker.com/;jsessionid=node08y7sv32qjg4pfz1qkl8tjkhn729548.node0?0 참고
       * - 구성 : 초 분 시 일 월 요일 [년도]
       * => 왼쪽에서 초부터 나열
       * - 상세
        * 	1) 초 : 0 ~ 59
        * 	2) 분 : 0 ~ 59
        * 	3) 시 : 0 ~ 23
        * 	4) 일 : 1 ~ 31
        * 	5) 월 : 0 ~ 11 또는 JAN, FEB, MAR, APR, MAY, JUN, JUL, AUS, SEP, OCT, NOV, DEC
        	6) 요일 : 1(MON) - 7(SUN) 또는 MON, TUE, WED, THR, FRI, SAT, SUN
        * 
         * - 작성
         * 	1) * : 매번
         * 	2) ? : 설정없음(일, 요일에 사용)
         * 	3) / : 주기 (ex a/b a부터 b마다 동작, 동작주기를 의미)
         * 	ex) ex) 1 : 1초에 동작, 0/1 1초마다 동작
         * 
         * - 작성예시
         * 	1) 10초마다 매일 	: 0/10 * * * * ?
         * 	2) 매일 1분마다	 	: 0 0/1 * * * ?
         * 	3) 금요일 12시마다	: 0 0 12 ? * FRI(5)
        * 	& ? 를 일/요일에 사용하는 이유 : 날짜에따라 요일이 바뀌기떄문에 지정할수없음
        * 	4) 주말 12시마다 	: 0 0 12 ? * SAT,SUN
         * 
         * */



[[[ 인터셉터
- 기능 : 컨트롤러에서 서비스가 실행되기 전, 후에 특정한 작업을 실시
* aop와 비슷한것 같다
- 클래스 위치 : 인터셉터 패키지를 만들어 내부에 존재
- 컨트롤러에서의 위치 : 각 요청의 상단에 존재

# 생성조건
1. 클래스 생성시, HandlerInterceptor를 상속시켜서 생성

2. servlet_context.xml에 빈, 인터셉터로 등록
- 방법 2가지
(1) 컴포넌트 방식 :  @component 선언 후 beans:bean으로 등록하기
(2) xml방식 : <bean>을 직접 등록후 beans:ref로 참조하기
* mapping : 인터셉터가 개입하는 서비스요청
 
3. 메서드에 사용하는 에너테이션
(1) @prehandle   :  컨트롤러 서비스 요청 전에 실행
(2) @posthandle  : 컨트롤러 서비스 요청 전에 실행

# 결과 
true를 반환하면 그다음 요청 실시, false를 반환하면 요청 실행안함

# 참고
13장 servlet




<%-- * session에 저장된 pw와 입력한 pw가 비교 안되는 이유
						- 답 : session에 저장된 pw는 securityutil로 암호화처리 해놓았기 때문
					 --%> 		


<<프로젝트 13 : 수업보조>>    -------------------------------------------------------


# 웹에서 쿠키 내역 확인하는법
- 방법 : f12 - 상단의 application - 좌측의 cookie

# JSESSIONID : 세션 아이디, 기본적으로 쿠키에 저장되있음, 브라우저 영역(session)에서 유지










