[2장 : 스프링 mvc 동작원리]

####################################
* 사전준비
- 톰캣 9.0 다운로드 및 환경변수 수정
- 기존의 서버 제거후 톰캣 9.0 등록
####################################

1. 특징 : 서블릿 파일을 직접 사용하지않는다
(다만 JSP파일을 사용하면 서블릿으로 변환되기 때문에 사용은 되고있는것)
(1) 컨트롤러 : java파일
(2) 서비스모델 : java파일
(3) 뷰 : jsp파일
===========================================================================================

2. 동작원리

<요청영역>
1) 클라이언트가 요청
ex) <a href="${contextPath}/list.do"/>

=

<DispatcherServlet 영역>
!!!! 스프링에서 추가된 영역-----------------------------------------------------------------
2) DispatcherServlet이 요청을 받음							
3) DispatcherServlet이 요청을 처리할 컨트롤러를 판단하는 HandlerMapping을 호출한다
4) HandlerMapping은 요청을 처리할 Controller을 호출한다

* DispatcherServlet의 위치 : spring폴더 - servlet-context.xml 파일을 의미한다
--------------------------------------------------------------------------------------------

=

<controller 영역>
5) controller가 요청을 처리할 service를 호출한다

!!!! 스프링에서 추가된 영역-----------------------------------------------------------------
6) controller가 응답을 처리할 model 또는 view를 호출한다
	(1) jsp	 	: 값을 전달(forward)할때 : reqeust 사용
	(2) spring 	: 값을 전달(forward)할때 : model을 사용 
	
	* model : 내부적으로 request를 사용하는 '보안이 향상된 객체'
	* view : 응답할 jsp 이름
--------------------------------------------------------------------------------------------

7) modelandview는 전달한 값은 model에 저장, 응답할 뷰는 view에 저장해서
DispatcherServlet에 전달한다

8) DispatcherServlet은 응답할 뷰 정보를 ViewResolver에 전달한다

9) ViewResolver가 실제로 응답할 뷰의 전체 정보(경로를 포함한 jsp의 이름)를 
DispatcherServlet에게 알려준다

10) DispatcherServlet이 응답한 뷰로 이동한다

* 응답정보는 controller과 servlet-context.xml(DispatcherServlet)에 둘다 포함되있음

=========================================================================================================================




















=