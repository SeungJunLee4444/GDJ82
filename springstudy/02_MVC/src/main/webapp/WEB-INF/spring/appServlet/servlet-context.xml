<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
	
	<!-- # DispatcherServlet : 프론트 컨트롤러, HTTP 프로토콜 요청을 제일 먼저 받아서 적합한 컨트롤러에 위임하는 역할을 수행한다  -->
	<!-- ===DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	
	<!-- ===Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- # 정적자원관리 영역  -->
	<!-- - 스트링은 정적자원을 관리하는 디렉터리를 정해둔다 
	     - 이런 정적자원의 경로는 복수 등록이 가능하다
	     - 방법 : <resource> 태그
		 - 정적자원의 종류 : images, audios, videos, css, js
	-->
	<!-- ===Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 1) 첫번째 정적자원 폴더 : resource -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 2) 두번째 정적자원 폴더 : assets, 정적자원 폴더를 삼고싶은 폴더를 추가하면된다 -->
	<resources mapping="/assets/**" location="/assets/" />
	<!-- * xml을 수정해준 경우 서버를 다시 작동시켜야한다  -->


	<!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->


	<!--# View Resolver 영역  -->
	<!-- - 정의 : 뷰컨트롤러, 말 그대로 뷰(jsp)를 컨트롤한다 -->
	<!-- - 기능 : 
 		 - 컨트롤러에서 return 'index';가 넘어오면,
	 	 - prefix{앞에붙이는말} "/WEB-INF/views/"를 "index"에 앞에 붙이고,
	  	 suffix{뒤에붙이는말} "/jsp"를 "index"뒤에 붙인다
		  
		 & 정리
		 (1) 뷰 컨트롤러는 요청받은 jsp의 절대경로를 완성시켜준다
		 (2) jsp 요청의 절대경로와 확장자를 붙여준다 
		 (3) 이를 위해서는 views폴더 내에서만 jsp페이지를 만들어야한다
	  -->
	<!-- ===Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- ! viewResolver :  -->
	</beans:bean>
	
	<!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
	
	<!-- # Component-scan 영역  -->
	<!-- - component-scan에 등록된 패키지에 있는 @component를 자동으로 bean에 등록한다
		 - 종류
		 	(1) @component
		 	(2) @controller 
		 	(3) @service
		 	(4) @repository
		 - 모든 구성요소는 base-package 내부에 작성해야한다
			ex) base-package가 com.gdu.app02일 경우,
		 	com.gdu.app02.controller
		 	com.gdu.app02.service
		 	com.gdu.app02.repository
		 	com.gdu.app02.domain
		 	com.gdu.app02.common
		 	...은 전부 내부에 작성해야한다
		 	
		 - 주의사항
		 com.gdu.app02 패키지에 controller 패키지를 추가한다 				=> ok
		 com.gdu.app02 패키지의 이름을 com.gdu.app02.controller로 바꾼다	=> x, 이유 : 이름을 바꾸면 base-package가 바뀐다 ***
	  -->
	<context:component-scan base-package="com.gdu.app02" />	<!-- = 패키지내 모든 파일이 @component를 bean에 등록시키기위해 패키지는 최상위 패키지어야한다  -->
	
	
</beans:beans>
