[2] 관계

1. 관계의 종류
1) 1대 1관계
=> 부모테이블의 pk값이 자식 테이블의 fk값을 하나만 가질 수 있음
=> 거의없음

2) 1대 다 관계
=> 부모테이블의 PK값이 자식 테이블의 FK값을 중복하여 가질 수 있음

ex) 
(1) 학교테이블
CREATE TABLE SCHOOL(
    SCH_CODE NUMBER(1) NOT NULL,
    SCH_NAME VARCHAR2(20 BYTE) NOT NULL,
    CONSTRAINT PK_SCHOOL PRIMARY KEY(SCH_CODE)
);

(2) 학교테이블을 외래키로 받는 학생테이블
CREATE TABLE STUDENT(
    STU_NO CHAR(5 BYTE) NOT NULL,
    SCH_CODE NUMBER(1) NOT NULL,
    STU_NAME VARCHAR2(20 BYTE) NULL,
    CONSTRAINT PK_STUDENT PRIMARY KEY(STU_NO),
    CONSTRAINT FK_STUDENT_SCHOOL FOREIGN KEY(SCH_CODE) REFERENCES SCHOOL(SCH_CODE)
);

3) 다대 다 관계
=> 일대다 관계가 두개 이상
=> 부모 테이블 두개 이상의 PK값을 받을 새로운 자식테이블에 FK를 두개 이상 생성

ex)
(1) 학생테이블
CREATE TABLE STUDENT(
    STU_NO CHAR(5 BYTE)         NOT NULL,      
    STU_NAME VARCHAR2(15 BYTE)  NULL,
    STU_AGE NUMBER(3)           NULL,
    CONSTRAINT PK_STU_NO PRIMARY KEY(STU_NO),
    CONSTRAINT CK_STU_AGE CHECK(STU_AGE BETWEEN 0 AND 100)
);

(2) 과목 테이블
CREATE TABLE SUBJECT(
    SUB_CODE CHAR(1 BYTE)              NOT NULL,
    SUB_NAME VARCHAR2(10 BYTE)         NULL,
    SUB_TEACHER_NAME VARCHAR2(20 BYTE) NULL,
    CONSTRAINT PK_SUB_CODE PRIMARY KEY(SUB_CODE)
);

(3) 학생, 과목 테이블을 상속받는 수강신청테이블
CREATE TABLE APLI(
    APLI_NO NUMBER(1) NOT NULL,
    STU_NO CHAR(5 BYTE) NOT NULL,
    SUB_CODE CHAR(1 BYTE) NOT NULL,
    CONSTRAINT PK_APLI_NO PRIMARY KEY(APLI_NO),
    CONSTRAINT FK_APLI_NO FOREIGN KEY(STU_NO) REFERENCES STUDENT(STU_NO),
    CONSTRAINT FK_SUB_CODE FOREIGN KEY(SUB_CODE) REFERENCES SUBJECT(SUB_CODE)
);

2. 테이블 관계표현(ERD)
1) 점선, 실선
=> NOT NULL이면 실선, NULL이면 점선

2) O와 X			(FK 제약조건문에 추가로 붙임)
=> O : ON DEDELE SET NULL, 참조할 PK값이 사라지면 NULL
=> X : ON DELETE CASCADE, 참조할 PK값이 사라지면 행 삭제

