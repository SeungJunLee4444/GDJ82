1. 자바는 객체가 가지고 있는 데이터(필드)의 정보 은닉을 위해서 어떤 방법을 사용하는지 서술하고, 정보 은닉된 데이터에 접근하기 위해서 어떤 방법을 사용하는지 함께 서술하시오.

=> 필드값 앞에 private 제어자를 붙이면 해당 필드값에 대한 직접적인 접근이 불가능해지며,

만약 해당 클래스 내에 setter,getter 메서드를 생성하면 은닉된 데이터에 우회적으로 접근할 수 있다 



2. 다음은 어떤 API를 사용하기 위한 요청과 응답 과정이다. 지시된 코드에서 빨간색으로 표시된 5개의 클래스의 사용 목적에 대해서 아는대로 서술하시오.



StringBuilder urlBuilder = new StringBuilder();

try {

    urlBuilder.append("http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson");

    urlBuilder.append("?serviceKey=").append(URLEncoder.encode("ciekgmapektlg109mzaiokdd", "UTF-8"));

    urlBuilder.append("&startCreateDt=").append(URLEncoder.encode("2020-01-01", "UTF-8");

    urlBuilder.append("&endCreateDt=").append(URLEncoder.encode("2020-01-31", "UTF-8");

} catch (UnsupportedEncodingException e) {

    e.printStackTrace();

}

URL url = null;

HttpURLConnection con = null;

try {

    url = new URL(urlBuilder.toString());

    con = (HttpURLConnection) url.openConnection();

    con.setRequestMethod("GET");

    con.setRequestProperty("Content-Type", "application/json; charset=UTF-8");

} catch(MalformedURLException e) {

    e.printStackTrace();

} catch(IOException e) {

    e.printStackTrace();

}

BufferedReader reader = null;

StringBuilder sb = new StringBuilder();

try {

    if(con.getResponseCode() == HttpURLConnection.HTTP_OK) {

        reader = new BufferedReader(new InputStreamReader(con.getInputStream()));

    } else {

        reader = new BufferedReader(new InputStreamReader(con.getErrorStream()));

    }

    String line = null;

    while((line = reader.readLine()) != null) {

        sb.append(line);

    }

    reader.close();

} catch(IOException e) {

    e.printStackTrace();

}

1) stringbuilder : 데이터 요청을 위한 apiurl 문자열 값을 만들 때, 주소와 파라미터의 string값을 일일히 더해줘야하는

번거로움을 보완하기 위함이다  

2) urlencorder : 한글, 문자 등 컴퓨터가 처리시 오류가 발생하는 언어를 컴퓨터의 언어로 변환하는 작업을 사용한다 *

3) httpurlconnection : api 주소에 접속하기 위해 사용하며, url의 openconnection과 함께 사용된다

추상클래스라 객체 생성은 불가능하며, url 객체를 강제캐스팅하여 사용한다

4) bufferedreader : 입력스트림시, 입력속도를 향상시켜주는 보조스트림이다

5) inputstreamreader : Byte 타입의 데이터를 문자 타입으로 변환하여 읽어주는 보조스트림이다





3. API 요청 시 요청 파라미터를 URL에 추가하는 방법에 대해서 아는대로 서술하시오.

1)  해당 api 사이트에 들어가, 데이터 요청에 필요한 요청 url, 디코딩된 servicekey, 필수 요청변수, 요청 타입, 문서 타입등을 확인한다

2)  stringbuilder 생성자를 선언하고, stringbuilder의 인스턴스에 append메서드로 url, servicekey, 요청변수를 추가한다

    이 때 url 주소 다음 맨 처음 파라미터의 변수 앞에는 ?을, 이후의 파라미터에는 %를 붙이고, 끝에는 =를 붙여야한다

    servicekey는 url이 한글, 문자가 포함된 경우를 대비해 인코딩을 실시하며, utf-8타입으로 한다

3) stringbuilder의 최종적인 변수값을 tostring 메서드로 문자열로 변환하고, 이를 임의의 문자열 타입 url 변수에 저장한다

4) url 클래스의 생성자를 만들고 매개변수에 위에서 만든 url 변수를 넣으면 추가된 파라미터까지 포함된 url을 사용할 수 있다 

