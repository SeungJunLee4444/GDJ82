& 초기화


########################################'
& 기타
insert(), update(), delete()를 헷갈려써도 제대로 작동한다
=> dao의 메서드보다는 쿼리문이 실행의 중점이기 때문

===================================

& 추가



===================================

& 수정
1. member.xml 
- <update> 태그로 update 쿼리 작성
- 입력한 아이디가 db에 저장된 아이디와 동일할경우 회원정보 수정 실행하는 쿼리문작성
 
2. member.dao
1) opensession(false) : 직접 커밋
2) int result = ss. update(mapper + "updateMember", member)
=> member 객체를 전달하여 int값으로 성공, 실패여부를 반환받는다
3) ss.commit()

3. membermodifyservice 수정서비스
1) 요청 파라미터
2) dto에 파라미터값을 저장
3) 저장한 dto로 dao의 updateMember 메서드를 실행시켜, int값을 반환받는다
- try,catch문 사용
(1) try
- 응답타입은 json
- json 오브젝트를 생성하여 {"isSuccess", result>0}; 으로 응답데이터 생성
- printwriter을 이용해 서비스에서 응답 실시

(2) catch
- 예외발생 : name 파라미터는 쿼리문에서 unique, notnull이였기 때문에, null값이면 예외발생
- 텍스트로 응답
- printerwriter을 이용해 해당응답 실시

4. 컨트롤러
- modify.do 요청 추가

5. manage.jsp
1) $(document).ready() 이벤트 함수에 fn_modify()함수 호출
2) fn_modify() 생성
(1) btn_modify 버튼 클릭시 ajax 요청응답 실행
- 요청
) insert, update는 post방식
) '${contextPath}/member/modify.do'	: 컨트롤러에 보낼 요청사항
) data : $('폼태그아이디').serialize() : 요청의 모든 파라미터를 줄지어 보냄

- 응답
& 수정서비스에서 응답으로,
성공 : {"isSuccess" : true}
실패 : {"isSuccess" : false}
예외 : ('회원정보가 수정되지 않았습니다')
를 전달한다

) dataType : json
) success : 성공시 요청 데이터는 resData에 저장
- true면 alert('회원정보가 수정되었습니다');
- false면 alert('회원정보 수정이 실패되었습니다');
) error : 실패시 요청 데이터는 jqXHR에 저장
- 예외 : alert(jqXHR.responseText);
(2) 


===================================

& 삭제
1.member.xml
- 삭제쿼리문 작성
WHERE MEMBER_NO = #{memberNo}
=> 왼쪽은 쿼리문, 오른쪽은 자바

2. memberdao 작성
int memberNo를 전달하면 int 성공여부값 반환

3. 서비스
1) memberNo를 파라미터 요청 
- optional로 null값 처리
- 문자를 입력한 numberformat 예외처리
2) 삭제 메서드 시행

4. 컨트롤러
- remove.do 요청사항 추가

5. manage.jsp
삭제는 get방식


===================================