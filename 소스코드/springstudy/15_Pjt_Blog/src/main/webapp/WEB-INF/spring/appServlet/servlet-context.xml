<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<!--  # 정적자원의 관리 -->
	<!-- * ${contextPath}/resources/ 우리가 평소에 쓰던 resources는 경로가 아닌 맵핑이며
			맵핑처리는 servlet-context.xml에서 정할 수 있다
		 * 즉 ${contextPath} 로 시작되는 것들은 경로가 아닌 맵핑요청이다
		 * 이미지(정적자원)의 mapping(맵핑)과 location(실제경로)을 servlet-context.xml에 작성해야한다
	 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/load/image/**" location="file:///C://upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.gdu.app15" />
	
	
	
</beans:beans>
