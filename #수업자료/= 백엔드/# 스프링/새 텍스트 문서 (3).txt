[2] 스피링



1. 자바빈 만드는 법
- 스프링 컨테이너의 <property> 태그는 자바의 setter 또는 생성자와 연결되어야한다
- 종류
1) setter 인젝션
- 자바파일 : 필드값, 'setter', getter 를 만든다
- 스프링 컨테이너 : bean 저장

2) 생성자 인젝션 
- 자바파일 : 필드값, '생성자'를 만든다
- 스프링 컨테이너 : bean 저장

=> setter 인젝션을 훨씬 많이 사용한다

================================================

2. 자바빈 + 스프링 컨테이너 생성구조
1) 자바
- 경로 : 
- 자바빈으로 저장할 클래스 생성

2) 스프링 컨테이너
- 정의 : 자바빈을 보관하고, 필요할때 꺼내서 사용한다
- 종류
* ApplicationContext 인터페이스를 구현한것
xml기반
(1) ClassPathXmlApplicationContext
(2) GenericXmlApplicationContext
* 이 둘은 상위 클래스 ApplicationContext 계열이다
=> 그래서 appCtx.xml이라 이름짓는다

어노테이션기반(자바)
AnnotationConfigApplicationContext 

<개념>

- 자바빈 만드는법
* 스프링의 컨테이너는
자바의 setter, 생성자와 연결되어야한다?
=> setter을 더 많이 사용한다

1. IOC 
1) 개념
- 제어의 역전
- 개발자가 아닌, 프레임워크가 제어하는 방식




3) 자바로 만든 스프링 컨테이너
- 규모가 커지면 xml이 아닌 java로 컨테이너를 생성한다

4) 방법 4가지
(1) setter 인젝션 : property태그를 setter로 주입하는경우
(2) constructor : 
(3)
(4)

2. 자바빈
- jsp에서 객체를 가져오기 위한 기법, dto


2. 스프링 컨테이너(자바빈 클래스를 담는)
ApplicationContext 계열 - 빈을 만드는 컨테이너 역할
(1) ClassPathXmlApplicationContext
(2) GenericXmlApplicationContext


#########################################################

<수업>