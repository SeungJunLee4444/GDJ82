[1장-1] SPRING 자바빈 생성

* bean의 컨테이너는 xml, java 두가지가 있으며,
xml은 setter, constructor, collection 방식 세가지가 있다


# 수업정리 ###############################################################

1. IOC
- 정의 : 제어의 역전, spring에서 빈은 bew를 통해 직접 생성하지 않고,
스프링 컨테이너에 빈을 담아 가져다 사용한다


& xml, setter을 이용한 bean 생성  
1) 클래스 생성 : 필드값 + getter, setter

------------------------------------------------------------------------------------

2) 컨테이너에 저장 :
(1) 클래스 저장(부모태그)
- 형태 : <bean id="클래스id(임의)" class="자바빈경로"/>
(2) 필드값 저장(자식태그)
- 기본타입 : <property name="자바빈필드명" value="필드값"/>
- 참조타입 : <property name="자바빈필드명" ref="참조하는 자바빈id"/>

& <bean><property> 작성방법은 3가지 있으나
2번재 방법을 사용할것(내맘), 나머지는 코드 참고

------------------------------------------------------------------------------------
 
3) 컨테이너 호출
(1) 객체 생성 : AbstractApplicationContext 객체 생성(ctx) +  
(2) 메서드 사용 
- ClassPathXmlApplicationContext("컨테이너경로")
- GenericXmlApplicationContext("컨테이너경로")
(3) 빈 가져오기 
- ctx(컨테이너객체).getBean("자바빈id", 클래스.class)

4) 참조한 자바빈 가져오기(직접 코드를 보는게 나을듯)
가정 : person 클래스가 address클래스를 필드값으로 가지고있다
ex) Address address = person.getAddr();
- 결과 : System.out.println(address.getJibun());

================================================

2. 스프링의 싱글턴
- 설명 : 스프링은 자바빈에서 싱글턴을 작성할 필요없으며,
- 스프링 컨테이너 내에서 scope 속성으로 해결가능하다
(1) scope="singleton" : bean을 하나만 만들어준다(싱글턴)
(2) scope="prototype" : bean을 요청할 때마다 만듬
- 자주사용x
* 생략하면 디폴트값이 싱글턴 

================================================

3. 스프링으로 connection 



#######################################################################


1. 자바빈
- 정의 : 자바객체를 스프링에서는 '빈'이라 한다

2. 스프링 컨테이너
- 정의 : 빈의 생성부터 소멸까지 개발자 대신 관리한다
- 형태 : ApplicationContext, xml문서
- 용도 : 스프링이 각 객체간 의존관계를 관리하는데에 목적이 있음

